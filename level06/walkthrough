gdb level06

On voit que le programme demande un login et un serial.
On remarque que le login est alors hashé pour donner un serial, comparé ensuite à notre serial.
Si ils sont égaux, alors ça lancera un shell

On va donc essayer de lire la clé une fois hashé dans gdb.

On voit que la comparaison du serial et de la clef hashé se fait à auth+286 (0x08048866)
On peut donc set un breakpoint et y lire la variable hashé.

    ....
    0x080487b5 <+109>:   call   0x80485f0 <ptrace@plt>
    0x080487ba <+114>:   cmp    $0xffffffff,%eax
    ....
    0x08048866 <+286>:   cmp    -0x10(%ebp),%eax
    ....

On a donc un call à ptrace, qu'on va devoir bypass en modifiant la valeur de eax.

(gdb) b *auth+114
Breakpoint 1 at 0x80487ba


Puis la comparaison de la variable hashé, on y met un breakpoint pour pouvoir la lire.

(gdb) b *auth+286
Breakpoint 2 at 0x8048866
(gdb) r

Breakpoint 1, 0x080487ba in auth ()
(gdb) set $eax=1             <= set eax à 1 pour bypass le ptrace.
(gdb) c                      <= continue
Continuing.

Breakpoint 2, 0x08048866 in auth ()
(gdb) x/d -0x10+$ebp
0xffffd698:	6229050

Le login doit avoir une len supérieur ou égal à 6.

On test avec "AAAAAA"

LOGIN: AAAAAA
SERIAL: 6229050